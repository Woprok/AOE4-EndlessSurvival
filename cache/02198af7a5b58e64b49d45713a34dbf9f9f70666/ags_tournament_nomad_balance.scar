---------------------------------------------------------------------------------------------------
-- Authors:
-- Relic
-- Woprock
-- MrMerlin
--
-- Description:
-- Nomad tournament adjustments.
-- Mongols: +100 Wood
-- English: +50 Wood
-- Ottomans: +50 Stone +50 Wood
-- Chinese: Main TC build time +100%
-- All: Outpost only after first TC built.
---------------------------------------------------------------------------------------------------

AGS_TOURNAMENT_NOMAD_BALANCE = "AGS_TournamentNomadBalance"
AGS_TOURNAMENT_NOMAD_BALANCE_MONGOL_WOOD = 100
AGS_TOURNAMENT_NOMAD_BALANCE_ENGLISH_WOOD = 50
AGS_TOURNAMENT_NOMAD_BALANCE_OTTOMAN_STONE = 50
AGS_TOURNAMENT_NOMAD_BALANCE_OTTOMAN_WOOD = 50

---------------------------------------------------------------------------------------------------
-- Delegates:
---------------------------------------------------------------------------------------------------

Core_RegisterModule(AGS_TOURNAMENT_NOMAD_BALANCE)	

function AGS_TournamentNomadBalance_UpdateModuleSettings()
	AGS_Print("AGS_TournamentNomadBalance_UpdateModuleSettings")
	if not AGS_GLOBAL_SETTINGS.TournamentNomadBalance then
		Core_UnregisterModule(AGS_TOURNAMENT_NOMAD_BALANCE)
	end
end

function AGS_TournamentNomadBalance_OnStarting()
	AGS_Print("AGS_TournamentNomadBalance_OnStarting")
	AGS_TournamentNomadBalance_ApplyBalance()
end

function AGS_TournamentNomadBalance_OnPlay()
	AGS_Print("AGS_TournamentNomadBalance_OnPlay")
	Rule_AddGlobalEvent(AGS_TournamentNomadBalance_OnConstructionComplete, GE_ConstructionComplete)
end

function AGS_TournamentNomadBalance_OnGameOver()
	AGS_Print("AGS_TournamentNomadBalance_OnGameOver")
	Rule_RemoveGlobalEvent(AGS_TournamentNomadBalance_OnConstructionComplete)
end

---------------------------------------------------------------------------------------------------
-- Callbacks:
---------------------------------------------------------------------------------------------------

function AGS_TournamentNomadBalance_OnConstructionComplete(context)	
	if context == nil or context.player == nil or context.entity == nil then 
		return
	end	
	if World_OwnsEntity(context.entity) then
		return
	end	
	local player = Core_GetPlayersTableEntry(context.player)
	-- Eliminated players are not interesting.
	if player.isEliminated then
		return
	end
	-- We are looking only for landmarks.
	if AGS_IsACapital(context.entity) then
		Player_SetEntityProductionAvailability(player.id, AGS_GetCivilizationEntity(player.raceName, AGS_BP_OUTPOST), ITEM_DEFAULT)
	end
end

---------------------------------------------------------------------------------------------------
-- Functions:
---------------------------------------------------------------------------------------------------
--
function AGS_TournamentNomadBalance_ApplyBalance()
	for _, player in pairs(PLAYERS) do			
		-- Increase starting resources based on what is missing from "low"
		if player.raceName == AGS_CIV_MONGOL then
			Player_GiftResource(player.id, RT_Wood, AGS_TOURNAMENT_NOMAD_BALANCE_MONGOL_WOOD)
		end
		
		if player.raceName == AGS_CIV_ENGLISH then
			Player_GiftResource(player.id, RT_Wood, AGS_TOURNAMENT_NOMAD_BALANCE_ENGLISH_WOOD)
		end
				
		if player.raceName == AGS_CIV_OTTOMAN then
			Player_GiftResource(player.id, RT_Stone, AGS_TOURNAMENT_NOMAD_BALANCE_OTTOMAN_STONE)
			Player_GiftResource(player.id, RT_Wood, AGS_TOURNAMENT_NOMAD_BALANCE_OTTOMAN_WOOD)
		end
		
		if player.raceName == AGS_CIV_CHINESE then
			-- Nerf TC build time
			local ebp = AGS_GetCivilizationEntity(player.raceName, AGS_BP_TC_CAPITAL)
			AGS_TournamentNomadBalance_Nerf(player.id, "cost_ticks_modifier", 2, ebp)
		end
		-- Block outpost
		Player_SetEntityProductionAvailability(player.id, AGS_GetCivilizationEntity(player.raceName, AGS_BP_OUTPOST), ITEM_LOCKED)
	end
end
-- Apply function.
function AGS_TournamentNomadBalance_Nerf(player_id, modifier_type, modifier_value, modifier_ebp)
	Modifier_ApplyToPlayer(Modifier_Create(MAT_EntityType, modifier_type, MUT_Multiplication, false, modifier_value, modifier_ebp), player_id, 0.0)
end	
