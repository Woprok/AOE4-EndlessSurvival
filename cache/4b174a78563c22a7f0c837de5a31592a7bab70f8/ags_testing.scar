---------------------------------------------------------------------------------------------------
-- Authors:
-- Relic
-- Woprock
--
-- Description:
-- Enables testing and cheating functionality. WIP.
---------------------------------------------------------------------------------------------------

AGS_TESTING_MODULE = "AGS_Testing"
AGS_TESTING_HOT_RELOAD  = "E:/Mods/Age of Empires IV/AOE4-EndlessSurvivalBundle/assets/scar/"
---------------------------------------------------------------------------------------------------
-- Delegates:
---------------------------------------------------------------------------------------------------

Core_RegisterModule(AGS_TESTING_MODULE)	

function AGS_Testing_UpdateModuleSettings()
	AGS_Print("AGS_Testing_UpdateModuleSettings")
	if not AGS_GLOBAL_SETTINGS.Debug or not AGS_GLOBAL_SETTINGS.Debug.Enabled then
		Core_UnregisterModule(AGS_TESTING_MODULE)
	end
end

function AGS_Testing_OnPlay()
	AGS_Print("AGS_Testing_OnPlay")
	for _, player in pairs(PLAYERS) do
		AGS_Print(player.id, player.raceName)
	end
end		

---------------------------------------------------------------------------------------------------
-- Functions:
---------------------------------------------------------------------------------------------------

function AGS_Testing_RemoveGaia()
	local egroup = EGroup_CreateUnique()
	World_GetAllNeutralEntities(egroup)
	EGroup_Filter(egroup, "animal", FILTER_KEEP)
	EGroup_DestroyAllEntities(egroup)    		
	EGroup_Destroy(egroup)
end

function AGS_Testing_RemoveUnits()
	for _, player in pairs(PLAYERS) do
		SGroup_DestroyAllSquads(Player_GetSquads(player.id))
	end
end
-- Returns option from command line like "-cheat" by asking for "cheat"
function AGS_Testing_HasCommandLineOption(option_name)
	return Misc_IsCommandLineOptionSet(option_name)
end

function AGS_Testing_SpawnTest()
	for i, player in pairs(PLAYERS) do
		local player_civ = player.raceName
		
		local snameSHP = AGS_SGroupName(player.id, "danes")
		local sbp_shp = BP_GetSquadBlueprint("unit_raider_dane")
		local sg_shp = AGS_SpawnSquad(player.id, snameSHP, sbp_shp, nil, World_Pos(-10, 0, -10), 5)
		local sbp_shp = BP_GetSquadBlueprint("unit_militia_1_rus")
		local sbp_shp = BP_GetSquadBlueprint("unit_great_trebuchet_cmp_mon")
		local sbp_shp = BP_GetSquadBlueprint("unit_landsknecht_mercenary_3_hre_cmp")
		local sbp_shp = BP_GetSquadBlueprint("unit_shield_villager_cmp_fre")
		local sbp_shp = BP_GetSquadBlueprint("unit_supply_cart_eng")
		local sbp_shp = BP_GetSquadBlueprint("unit_foot_knight_2_cmp_eng")
		local sbp_shp = BP_GetSquadBlueprint("unit_shield_villager_cmp_eng")
		local sbp_shp = BP_GetSquadBlueprint("unit_shieldwall_hastings_cmp_eng")
		local sbp_shp = BP_GetSquadBlueprint("unit_supply_cart_chi")
		local sbp_shp = BP_GetSquadBlueprint("unit_militia_cmp_chi")
	end
end

function AGS_Testing_Hot_Reload(file)
    if AGS_GLOBAL_SETTINGS.Debug.HotReload then
        local success, resultOrError = pcall(function() return assert(loadfile(AGS_TESTING_HOT_RELOAD..file))() end)
        if not success then
            fatal("Error importing file '"..file.."':\n" .. tostring(resultOrError))
        end
    else
        import(file)
    end
end