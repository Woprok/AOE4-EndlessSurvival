---------------------------------------------------------------------------------------------------
-- Authors:
-- Relic
-- Woprock
--
-- Description:
-- Contains functionality for adjusting starting villagers for prefab start.
-- Contains functionality to replicate prefab start.
---------------------------------------------------------------------------------------------------

AGS_SETTLED_MODULE = "AGS_Settled"

---------------------------------------------------------------------------------------------------
-- Delegates:
---------------------------------------------------------------------------------------------------

Core_RegisterModule(AGS_SETTLED_MODULE)	

function AGS_Settled_UpdateModuleSettings()
	AGS_Print("AGS_Settled_UpdateModuleSettings")
	if AGS_GLOBAL_SETTINGS.Settlement ~= AGS_GS_SETTLEMENT_SETTLED then
		Core_UnregisterModule(AGS_SETTLED_MODULE)
	end
end

function AGS_Settled_PresetExecute()
	AGS_Print("AGS_Settled_PresetExecute")
	if AGS_GLOBAL_SETTINGS.UsingPrefabStart then
		AGS_Settled_AdjustSpawn()
	else
		AGS_Settled_CreateSpawn()
	end
end

---------------------------------------------------------------------------------------------------
-- Functions:
---------------------------------------------------------------------------------------------------

-- Adjusting prefab start.
function AGS_Settled_AdjustSpawn()
	for _, player in pairs(PLAYERS) do	
		local villager_count = AGS_GLOBAL_SETTINGS.StartingVillagers
		-- Adjust count to a new value.		
		local sgroup = Player_GetSquadsFromType(player.id, AGS_BP_VILLAGER)
		villager_count = villager_count - SGroup_CountSpawned(sgroup)
		if villager_count > 0 then
			local sbp_vil = AGS_GetCivilizationUnit(player.raceName, AGS_BP_VILLAGER)
			local snameVIL = AGS_SGroupName(player.id, AGS_BP_VILLAGER)
			local start_adjusted_pos = AGS_Starts_GetStartPosition(player.id)
			AGS_SpawnSquad(player.id, snameVIL, sbp_vil, start_adjusted_pos, World_Pos(0, 0, -10), villager_count)
		elseif villager_count < 0 then 
			-- Desired number was lower, we will eliminate few villagers.
			local idx = 1
			while(villager_count < 0) do
				local soon_dead = SGroup_GetSquadAt(sgroup, idx)
				Squad_Destroy(soon_dead)
				villager_count = villager_count + 1
				idx = idx + 1
			end
		end		
	end
end

-- Setup for customized settled spawn.
function AGS_Settled_CreateSpawn()
	for _, player in pairs(PLAYERS) do	
		if player.raceName == AGS_CIV_MONGOL then
			AGS_Settled_SpawnMovingTownCenter(player.id, player_civ)
		else
			AGS_Settled_SpawnStaticTownCenter(player.id, player_civ)
		end
		AGS_Settled_SpawnUnits(player.id, player_civ)
	end
end
-- Setup as placed town center.
function AGS_Settled_SpawnStaticTownCenter(player_id, player_civ)	
	local egTownCenter = Player_GetEntitiesFromType(player_id, AGS_BP_TC) 
	if EGroup_CountSpawned(egTownCenter) == 0 then	
		local ebp_tc = AGS_GetCivilizationEntity(player_civ, AGS_BP_TC_CAPITAL)		
		local enameTC = AGS_EGroupName(player_id, AGS_BP_TC)
		local eg_tc = AGS_SpawnEntity(player_id, enameTC, ebp_tc, nil, World_Pos(0, 0, 0))
	end	
end
-- Setup as moving town center.
function AGS_Settled_SpawnMovingTownCenter(player_id, player_civ)	
	local sqTownCenter = Player_GetSquadsFromType(player_id, AGS_BP_TC)
	if SGroup_CountSpawned(sqTownCenter) == 0 then	
		local sbp_tc = AGS_GetCivilizationUnit(player_civ, AGS_BP_TC_CAPITAL_UNIT)
		local snameTC = AGS_SGroupName(player_id, AGS_BP_TC)
		local sg_tc = AGS_SpawnSquad(player_id, snameTC, sbp_tc, nil, World_Pos(0, 0, 0), AGS_GLOBAL_SETTINGS.StartingTownCenters)
	end
end

function AGS_Settled_SpawnUnits(player_id, player_civ)		
	local sbp_vil = AGS_GetCivilizationUnit(player_civ, AGS_BP_VILLAGER)
	local snameVIL = AGS_SGroupName(player_id, AGS_BP_VILLAGER)
	AGS_SpawnSquad(player_id, snameVIL, sbp_vil, nil, World_Pos(-8, 0, -12), AGS_GLOBAL_SETTINGS.StartingVillagers)
		
	local sbp_sco = AGS_GetCivilizationUnit(player_civ, AGS_BP_SCOUT)
	local snameSCO = AGS_SGroupName(player_id, AGS_BP_SCOUT)
	AGS_SpawnSquad(player_id, snameSCO, sbp_sco, nil, World_Pos(-12, 0, -8), AGS_GLOBAL_SETTINGS.StartingScouts)

	local sbp_shp = AGS_GetNeutralUnit(AGS_BP_SHEEP)
	local snameSHP = AGS_SGroupName(player_id, AGS_BP_SHEEP)
	AGS_SpawnSquad(player_id, snameSHP, sbp_shp, nil, World_Pos(-9, 0, -9), AGS_GLOBAL_SETTINGS.StartingSheeps)	

	if player_civ == AGS_CIV_HRE then		
		local sbp_mnk = AGS_GetCivilizationUnit(player_civ, AGS_BP_MONK)
		local snameMNK = AGS_SGroupName(player_id, AGS_BP_MONK)
		local sg_mnk = AGS_SpawnSquad(player_id, snameMNK, sbp_mnk, nil, World_Pos(-14, 0, -14), AGS_GLOBAL_SETTINGS.StartingMonks)	
	end	
end