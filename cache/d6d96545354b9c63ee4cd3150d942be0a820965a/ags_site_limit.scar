---------------------------------------------------------------------------------------------------
-- Authors:
-- Relic
-- Woprock
--
-- Description:
-- Reduces sacred site count to 1 and place it in middle.
---------------------------------------------------------------------------------------------------

AGS_SITE_LIMIT_MODULE = "AGS_SiteLimit"

---------------------------------------------------------------------------------------------------
-- Delegates:
---------------------------------------------------------------------------------------------------

Core_RegisterModule(AGS_SITE_LIMIT_MODULE)	

function AGS_SiteLimit_UpdateModuleSettings()
	AGS_Print("AGS_SiteLimit_UpdateModuleSettings")
	if not AGS_GLOBAL_SETTINGS.ReligiousSettings.SingleCentralSite then
		Core_UnregisterModule(AGS_SITE_LIMIT_MODULE)
	end
end

function AGS_SiteLimit_EarlyInitializations()
	AGS_Print("AGS_SiteLimit_EarlyInitializations")
	AGS_SiteLimit_RemoveMapSacredSites()
end

function AGS_SiteLimit_PresetExecute()
	AGS_Print("AGS_SiteLimit_PresetExecute")
	AGS_SiteLimit_CreateCentralSite()
end

---------------------------------------------------------------------------------------------------
-- Functions:
---------------------------------------------------------------------------------------------------

function AGS_SiteLimit_RemoveMapSacredSites()	
	local all_prefab_sites = EGroup_CreateUnique()
	World_GetBlueprintEntities(AGS_GetNeutralEntity(AGS_BP_SACRED_SITE), all_prefab_sites)
	for i = 1, EGroup_CountSpawned(all_prefab_sites) do
		local eid = EGroup_GetSpawnedEntityAt(all_prefab_sites, i)
		if eid ~= nil and Entity_IsSpawned(eid) then
			Entity_Destroy(eid)
		end
	end
end

function AGS_SiteLimit_CreateCentralSite()
	-- Create city point
	local ebp_site = AGS_GetNeutralEntity(AGS_BP_SACRED_SITE)
	local city_entity_id = AGS_SiteLimit_CreateEntity(ebp_site, World_Pos(0, World_GetHeightAt(0, 0), 0))
end

-- Spawn entity as neutral and return it to caller.
function AGS_SiteLimit_CreateEntity(bp_entity, position)
	local position_offset = World_Pos(0, 0, 0)	
	-- Determine proper position and rotation.
	local nx = position.x
	local ny = position.y
	local nz = position.z
	local placement = World_Pos(nx + position_offset.x, ny + position_offset.y, nz + position_offset.z)
	local rotation = World_Pos(nx + position_offset.x, ny + position_offset.y, nz + position_offset.z + 5)
	-- Spawn
	local e = Entity_CreateENVFacing(bp_entity, placement, rotation, true)
	
	local safe_spawn = World_GetSpawnablePosition(placement, e)
	Entity_WarpToPos(e, safe_spawn)
	
	Entity_Spawn(e)
	Entity_ForceConstruct(e)
	Entity_SnapToGridAndGround(e, false)
	return e	
end